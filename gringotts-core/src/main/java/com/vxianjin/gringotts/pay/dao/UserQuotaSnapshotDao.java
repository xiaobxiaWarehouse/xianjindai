package com.vxianjin.gringotts.pay.dao;

import com.vxianjin.gringotts.pay.model.UserQuotaModel;
import com.vxianjin.gringotts.pay.model.UserQuotaSnapshot;
import org.apache.ibatis.annotations.Param;

import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;

public interface UserQuotaSnapshotDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_borrowquota_snapshot
     *
     * @mbggenerated Tue Sep 11 10:29:05 CST 2018
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_borrowquota_snapshot
     *
     * @mbggenerated Tue Sep 11 10:29:05 CST 2018
     */
    int insert(UserQuotaSnapshot record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_borrowquota_snapshot
     *
     * @mbggenerated Tue Sep 11 10:29:05 CST 2018
     */
    int insertSelective(UserQuotaSnapshot record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_borrowquota_snapshot
     *
     * @mbggenerated Tue Sep 11 10:29:05 CST 2018
     */
    UserQuotaSnapshot selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_borrowquota_snapshot
     *
     * @mbggenerated Tue Sep 11 10:29:05 CST 2018
     */
    int updateByPrimaryKeySelective(UserQuotaSnapshot record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_borrowquota_snapshot
     *
     * @mbggenerated Tue Sep 11 10:29:05 CST 2018
     */
    int updateByPrimaryKey(UserQuotaSnapshot record);

    /**
     * 根据用户id查询用户可用额度
     *
     * @param userId 用户id
     * @return
     */
    List<UserQuotaSnapshot> queryByUserId(String userId);


    /**
     * 查询用户某期的最大可借额度
     *
     * @param queryMap
     * @return
     */
    UserQuotaModel querUserQuota(HashMap<String, String> queryMap);

    int updateUserQuota(@Param("userId") int userId, @Param("productId") int productId, @Param("borrowDay") int borrowDay, @Param("nowLimit") BigDecimal nowLimit);

    int addUserQuota(@Param("userId") int userId, @Param("productId") int productId, @Param("nowLimit") BigDecimal nowLimit, @Param("borrowDay") int borrowDay);

    /**
     * 获取用户最大额度
     *
     * @param userId 用户id
     * @return
     */
    BigDecimal queryUserMaxLimit(int userId);

    int updateUserLimitAmount(@Param("userId") int userId, @Param("borrowDay") int borrowDay, @Param("nowLimit") BigDecimal nowLimit);

    UserQuotaSnapshot queryByUserIdBorrowDay(@Param("userId") Integer userId, @Param("borrowDay") int borrowDay);
}